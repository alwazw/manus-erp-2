version: '3.8'

services:
  db:
    image: postgres:14
    container_name: erp_postgres
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database_init:/docker-entrypoint-initdb.d
    networks:
      - erp_network

  grafana:
    image: grafana/grafana:latest
    container_name: erp_grafana
    restart: always
    depends_on:
      - db
    environment:
      GF_SECURITY_ADMIN_USER: ${GF_SECURITY_ADMIN_USER}
      GF_SECURITY_ADMIN_PASSWORD: ${GF_SECURITY_ADMIN_PASSWORD}
      GF_AUTH_ANONYMOUS_ENABLED: ${GF_AUTH_ANONYMOUS_ENABLED}
      GF_AUTH_ANONYMOUS_ORG_ROLE: ${GF_AUTH_ANONYMOUS_ORG_ROLE}
      GF_INSTALL_PLUGINS: ${GF_INSTALL_PLUGINS}
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    networks:
      - erp_network

  adminer:
    image: adminer:latest
    container_name: erp_adminer
    restart: always
    depends_on:
      - db
    ports:
      - "8080:8080"
    networks:
      - erp_network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: erp_frontend
    restart: always
    ports:
      - "3003:3000"
    environment:
      - NEXT_PUBLIC_API_BASE_URL=${NEXT_PUBLIC_API_BASE_URL}
      - NEXT_PUBLIC_GRAFANA_URL=http://localhost:3000
    depends_on:
      - db
      - grafana
    networks:
      - erp_network

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: erp_backend
    restart: always
    ports:
      - "8000:8000"
    environment:
      - APP_PORT=${APP_PORT}
      - DEBUG=${DEBUG}
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
    depends_on:
      - db
      - redis
    networks:
      - erp_network

  redis:
    image: redis:alpine
    container_name: erp_redis
    restart: always
    ports:
      - "6379:6379"
    networks:
      - erp_network

networks:
  erp_network:
    driver: bridge

volumes:
  postgres_data:
  grafana_data:
